services:
  user_app:
    build:
      context: users/
    container_name: users_app
    command: python main.py
    depends_on:
      - db
      - kafka
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:123456@db:5432/mydatabase
    ports:
      - "8000:8000"
    volumes:
      - ./users/src:/app


  product_app:
    build:
      context: products/
    container_name: products_app
    command: python main.py
    depends_on:
      - product_redis
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:123456@db:5432/mydatabase
    ports:
      - "8001:8000"
    volumes:
      - ./products/src:/app

  product_redis:
    image: redis:latest
    container_name: product_redis_container
    volumes:
      - product_redis_data:/data

  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin


  nginx:
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/src:/usr/share/nginx/html
    depends_on:
      - user_app

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper_svc

  kafka:
    image: wurstmeister/kafka
    container_name: kafka_svc
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_svc:2181
      KAFKA_LISTENER_INTERNAL: INSIDE://kafka:9093


volumes:
  postgres_data:
  pgadmin_data:
